const Parser = require("tree-sitter");
const Elm = require("tree-sitter-elm");

const parser = new Parser();
parser.setLanguage(Elm);

const moduleDeclaration = `-- This module is generated by \`setem\` command. DO NOT edit manually!


module RecordSetter exposing (..)


`;

function setterDefinition(recordFieldIdentifier) {
  return `s_${recordFieldIdentifier} : a -> { b | ${recordFieldIdentifier} : a } -> { b | ${recordFieldIdentifier} : a }
s_${recordFieldIdentifier} value record =
    { record | ${recordFieldIdentifier} = value }
`;
}

function parse(source) {
  const tree = parser.parse(source);
  const recordFieldIdentifiers = tree.rootNode
    .descendantsOfType(["field_type", "field"])
    .flatMap((f) => f.descendantsOfType(["lower_case_identifier"]))
    .map((identifier) => identifier.text);
  const sortedUniqIdentifiers = Array.from(
    new Set(recordFieldIdentifiers)
  ).sort();
  const setters = sortedUniqIdentifiers.map(setterDefinition).join("\n\n");
  return moduleDeclaration + setters;
}

module.exports = parse;
